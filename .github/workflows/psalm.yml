name: psalm

on:
  workflow_call:
    inputs:
      composer-command:
        description: Composer command to run.
        default: composer update --prefer-dist --no-interaction --no-progress --optimize-autoloader --ansi
        required: false
        type: string
      composer-root-version:
        description: Composer root version.
        default: dev-master
        required: false
        type: string
      subpackage:
        description: Subpackage to install.
        default: ''
        required: false
        type: string
      psalm-config:
        description: Psalm configuration file.
        default: psalm.xml
        required: false
        type: string
      os:
        description: Os to test, separated by comma.
        default: '["ubuntu-latest"]'
        required: false
        type: string
      php:
        description: PHP versions to test, separated by comma.
        default: '["8.1","8.2","8.3","8.4"]'
        required: false
        type: string
      extensions:
        description: List of extensions to PHP.
        default:
        required: false
        type: string

jobs:
  psalm:
    name: PHP ${{ matrix.php }}-${{ matrix.os }}

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ${{ fromJson(inputs.os) }}
        php: ${{ fromJson(inputs.php) }}

    steps:
      - name: Checkout.
        uses: actions/checkout@v4

      - name: Install PHP with extensions.
        uses: shivammathur/setup-php@v2
        with:
          coverage: none
          php-version: ${{ matrix.php }}
          extensions: ${{ inputs.extensions }}
          tools: cs2pr

      - name: Determine composer cache directory on Linux.
        run: echo "COMPOSER_CACHE_DIR=$(composer config cache-dir)" >> $GITHUB_ENV

      - name: Cache dependencies installed with composer.
        uses: actions/cache@v4
        with:
          path: ${{ env.COMPOSER_CACHE_DIR }}
          key: php${{ matrix.php }}-composer-${{ hashFiles('composer.json') }}
          restore-keys: |
            php${{ matrix.php }}-composer-

      - name: Update composer.
        run: composer self-update

      - name: Install dependencies with composer.
        run: ${{ inputs.composer-command }}

      - if: ${{ inputs.subpackage != '' }}
        name: Install ${{ inputs.subpackage }}.
        uses: yiisoft/actions/.github/workflows/install-subpackage@install-subpackage
        with:
          subpackage: ${{ inputs.subpackage }}
          composer-root-version: ${{ inputs.composer-root-version }}

      - name: Static analysis.
        run: vendor/bin/psalm --config=${{ inputs.psalm-config }} --shepherd --stats --output-format=github --php-version=${{ matrix.php }}
